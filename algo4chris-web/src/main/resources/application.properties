server.port=8080
spring.profiles.active=default

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:postgresql://localhost:5432/algo4chris
spring.datasource.username=postgres
spring.datasource.password=123456

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

spring.sql.init.mode=always

# Without below HikariCP uses deprecated com.zaxxer.hikari.hibernate.HikariConnectionProvider
# Surprisingly enough below ConnectionProvider is in hibernate-hikaricp dependency and not hibernate-core
# So you need to pull that dependency but, make sure to exclude it's transitive dependencies or you will end up
# with different versions of hibernate-core
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB

spring.redis.host= 127.0.0.1

# jwt properties
algo4chris.app.jwtSecret=IkF1dGhBbGdvNGNocmlzQXBwSnd0VG9rZW5TZWNyZXRLZXki
algo4chris.app.jwtExpirationMs=3600000
algo4chris.app.jwtRefreshExpirationMs=86400000

### Swagger
knife4j.production=false
knife4j.basic.enable=false
knife4j.basic.username=dev
knife4j.basic.password=dev

server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=1m